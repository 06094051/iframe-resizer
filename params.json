{"name":"Iframe-resizer","tagline":"Size cross domain iFrames to content with support for window/content resizing, and multiple iFrames.","body":"# iFrame Resizer \r\n\r\nThis library enables the automatic resizing of the height and width of both same and cross domain iFrames to fit the contained content. It uses [postMessage](https://developer.mozilla.org/en-US/docs/Web/API/window.postMessage) to pass messages between the host page and the iFrame and when available [MutationObserver](https://developer.mozilla.org/en/docs/Web/API/MutationObserver) to detect DOM changes, with a fall back to setInterval for IE8-10. The code also detects resize events and provides functions to allow the iFrame to set a custom size.\r\n\r\nThe package contains two minified JavaScript files in the [js](js) folder. The first ([iframeResizer.min.js](https://raw2.github.com/davidjbradshaw/iframe-resizer/master/js/iframeResizer.min.js)) is for the page hosting the iFrames. It can be called with **native** JavaScript;\r\n\r\n```js\r\niFrameResize([{options}],[selector]);\r\n```\r\n\r\nor via **jQuery**. (See [notes](https://github.com/davidjbradshaw/iframe-resizer#browser-compatibility) below for using native version with IE8).\r\n\r\n```js\r\n$('iframe').iFrameResize([{options}]);\r\n```\r\n\r\nThe second file ([iframeResizer.contentWindow.min.js](https://raw.github.com/davidjbradshaw/iframe-resizer/master/js/iframeResizer.contentWindow.min.js)) is a **native** JavaScript file that needs placing in the page contained within your iFrame. <i>This file is designed to be a guest on someone else's system, so has no dependancies and won't do anything until it's activated by a message from the containing page</i>.\r\n\r\n### Typical setup\r\n\r\nThe normal configuration is to have the iFrame resize when the browser window changes size or the content of the iFrame changes. To set this up you need to configure one of the dimensions of the iFrame to a percentage and tell the library only to update the other dimension. Normally you would set the width to 100% and have the height scale to fit the content.\r\n\r\n```html\r\n<iframe src=\"http://anotherdomain.com/frame.content.html\" width=\"100%\" scrolling=\"no\"></iframe>\r\n```\r\n\r\nNote that scrolling is set to 'no', as older versions of IE don't allow this to be turned off in code and can just slightly add a bit of extra space to the bottom of the content that it doesn't report when it returns the height.\r\n\r\n###Example\r\nTo see this working take a look at this [example](http://davidjbradshaw.com/iframe-resizer/example/) and watch the console log.\r\n\r\n## Options\r\n\r\n### log\r\n\r\n\tdefault: false\r\n\ttype: boolean\r\n\r\nSetting the `log` option to true will make the scripts in both the host page and the iFrame output everything they do to the JavaScript console so you can see the communication between the two scripts.\r\n\r\n### autoResize\r\n\r\n\tdefault: true\r\n\ttype: boolean\r\n\r\nWhen enabled changes to the Window size or the DOM will cause the iFrame to resize to the new content size. Disable if using size method with custom dimensions.\r\n\r\n### bodyMargin\r\n\r\n\tdefault: null\r\n\ttype: string || number\r\n\r\nOverride the default body margin style in the iFrame. A string can be any valid value for the CSS margin attribute, for example '8px 3em'. A number value is converted into px.\r\n\r\n### checkOrigin\r\n\r\n\tdefault: true\r\n\ttype: boolean\r\n\r\nWhen set to true, only allow incoming messages from the domain listed in the `src` property of the iFrame tag. If your iFrame navigates between different domains, ports or protocols; then you will need to disable this option.\r\n \r\n### enablePublicMethods  \r\n\r\n\tdefault: false\r\n\ttype: boolean\r\n\r\nIf enabled, a `window.parentIFrame` object is created in the iFrame. This contains `size()` and `close()` methods.\r\n\r\n### interval\r\n\r\n\tdefault: 32  (in ms)\r\n\ttype: number\r\n\r\nIn browsers that don't support [mutationObserver](https://developer.mozilla.org/en/docs/Web/API/MutationObserver), such as IE10, the library falls back to using setInterval, to check for changes to the page size. The default value is equal to two frame refreshes at 60Hz, setting this to a higher value will make screen redraws noticeable to the user.\r\n\r\nSetting this property to a negative number will force the interval check to run instead of [mutationObserver](https://developer.mozilla.org/en/docs/Web/API/MutationObserver).\r\n\r\nSet to zero to disable.\r\n\r\n### resizedCallback\r\n\r\n\ttype: function ({iframe,height,width,type})\r\n\t\r\nFunction called after iFrame resized. Passes in messageData object containing the **iFrame**, **height**, **width** and the **type** of event that triggered the iFrame to resize.\r\n\r\n### scrolling\r\n\r\n    default: false\r\n    type: boolean\r\n\r\nEnable scroll bars in iFrame.\r\n\r\n### sizeHeight\r\n\r\n\tdefault: true\r\n\ttype: boolean\r\n\r\nResize iFrame to content height.\r\n\r\n### sizeWidth\r\n\r\n\tdefault: false\r\n\ttype: boolean\r\n\r\nResize iFrame to content width.\r\n\r\n\r\n## IFrame Methods\r\n\r\nTo enable these methods you must set `enablePublicMethods` to `true`. This creates the `window.parentIFrame` object in the iFrame.\r\n\r\n### window.parentIFrame.close()\r\n\r\nCalling this function causes the parent page to remove the iFrame. This method should be contained in the following wrapper, in case the page is not loaded inside an iFrame.\r\n\r\n```js\r\nif ('parentIFrame' in window) {\r\n\twindow.parentIFrame.close();\r\n}\r\n```\r\n\r\n### window.parentIFrame.size ([customHeight],[ customWidth])\r\n\r\nManually force iFrame to resize. In case the page is loaded outside the iFrame, you should test before making this call.\r\n\r\n```js\r\nif ('parentIFrame' in window) {\r\n\twindow.parentIFrame.size();\r\n}\r\n```\r\n\r\nThis method also accepts two arguments: **customHeight** & **customWidth**. To use them you need first to disable the *autoResize* option to prevent auto resizing and enable the *sizeWidth* option if you wish to set the width. \r\n\r\n```js\r\niFrameResize({\r\n\tautoResize: false,\r\n\tenablePublicMethods: true,\r\n\tsizeWidth: true\r\n});\r\n```\r\n\r\nThen just call size method with dimensions:\r\n\r\n```js\r\nif ('parentIFrame' in window) {\r\n\twindow.parentIFrame.size(100); // Set height to 100px\r\n}\r\n```\r\n\r\n\r\n## Browser compatibility \r\n###jQuery version\r\n\r\nWorks with all browsers which support [window.postMessage](http://caniuse.com/#feat=x-doc-messaging) (IE8+).\r\n\r\n###Native version\r\n\r\nAdditionally requires support for [Array.prototype.forEach](http://kangax.github.io/es5-compat-table/#Array.prototype.forEach) (IE9+) and [document.querySelectorAll](https://developer.mozilla.org/en-US/docs/Web/API/Document.querySelectorAll) (IE8 Standards Mode). For **IE8** force [Standards Mode](http://en.wikipedia.org/wiki/Internet_Explorer_8#Standards_mode),\r\n\r\n```html\r\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n```\r\n\r\nand use the [MDN PolyFil](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach) on the host page.\r\n\r\n```js\r\nif (!Array.prototype.forEach){\r\n\tArray.prototype.forEach = function(fun /*, thisArg */){\r\n\t\t\"use strict\";\r\n\t\tif (this === void 0 || this === null || typeof fun !== \"function\") throw new TypeError();\r\n\r\n\t\tvar\r\n\t\t\tt = Object(this),\r\n\t\t\tlen = t.length >>> 0,\r\n\t\t\tthisArg = arguments.length >= 2 ? arguments[1] : void 0;\r\n\r\n\t\tfor (var i = 0; i < len; i++)\r\n\t\t\tif (i in t)\r\n\t\t\t\tfun.call(thisArg, t[i], i, t);\r\n\t};\r\n}\r\n```\r\n\r\n\r\n## Install via Package Management Systems\r\n\r\nThis library can be installed via the [Bower](http://bower.io),\r\n\r\n    bower install iframe-resizer\r\n\r\nand [Component](http://component.io) front-end package management systems.\r\n\r\n    component install davidjbradshaw/iframe-resizer\r\n\r\n\r\n##Changes between version 1 and 2.\r\n\r\nVersion 2 makes a few changes that you need to be aware of when upgrading. The filename of the host page script has been renamed from jquery.iframeResizer.min.js to iframeResizer.min.js in order to reflect that jQuery is now an optional way of calling the script. The do(Heigh/Width) options have been renamed size(Height/Width), contentWindowBodyMargin has been renamed bodyMargin and callback has been renamed resizedCallback.\r\n\r\nThe method names deprecated in version 1.3.0 have now been removed. Versions 1 and 2 remain compatable with each other so you can use version 2 of the hostpage script with an iFrame running version 1 of the iFrame script, or *vice versa*, however, it should be noted that the V1 iFrame script only accepts number values for bodyMargin.\r\n\r\n\r\n##Version History\r\n* v2.0.0 Added native JS public function, renamed script filename to reflect that jQuery is now optional. Renamed *do(Heigh/Width)* to *size(Height/Width)*, renamed *contentWindowBodyMargin* to *bodyMargin* and renamed *callback* *resizedCallback*. Improved logging messages. Stop *resize* event firing for 50ms after *interval* event. Added multiple page example. Workout unsized margins inside the iFrame. The *bodyMargin* propety now accepts any valid value for a CSS margin. Check message origin is iFrame. Removed deprecated methods.\r\n* v1.4.4 Fixed *bodyMargin* bug.\r\n* v1.4.3 CodeCoverage fixes. Documentation improvements.\r\n* v1.4.2 Fixed size(250) example in IE8.\r\n* v1.4.1 Setting `interval` to a negative number now forces the interval test to run instead of [MutationObserver](https://developer.mozilla.org/en/docs/Web/API/MutationObserver).\r\n* v1.4.0 Option to enable scrolling in iFrame, off by default. Bower dependancies updated.\r\n* v1.3.7 Stop *resize* event firing for 50ms after *size* event. Added size(250) to example.\r\n* v1.3.6 Updated jQuery to v1.11.0 in example due to IE11 having issues with jQuery v1.10.1.\r\n* v1.3.5 Documentation improvements. Added Grunt-Bump to build script.\r\n* v1.3.0 IFrame code now uses default values if called with an old version of the host page script. Improved function naming. Old names have been deprecated and removed from docs, but remain in code for backwards compatabilty.\r\n* v1.2.5 Fix publish to [plugins.jquery.com](https://plugins.jquery.com).\r\n* v1.2.0 Added autoResize option, added height/width values to iFrame public size function, set HTML tag height to auto, improved documentation [All [Jure Mav](https://github.com/jmav)]. Plus setInterval now only runs in browsers that don't support [MutationObserver](https://developer.mozilla.org/en/docs/Web/API/MutationObserver) and is on by default, sourceMaps added and close() method introduced to window.parentIFrame object in iFrame. \r\n* v1.1.1 Added event type to messageData object.\r\n* v1.1.0 Added DOM [MutationObserver](https://developer.mozilla.org/en/docs/Web/API/MutationObserver) trigger to better detect content changes in iFrame, [#7](https://github.com/davidjbradshaw/iframe-resizer/issues/7) Set height of iFrame body element to auto to prevent resizing loop, if it's set to a percentage.\r\n* v1.0.3 [#6](https://github.com/davidjbradshaw/iframe-resizer/issues/6) Force incoming messages to string. Migrated to Grunt 4.x. Published to Bower.\r\n* v1.0.2 [#2](https://github.com/davidjbradshaw/iframe-resizer/issues/2) mime-type changed for IE8-10.\r\n* v1.0.0 Initial published release.\r\n\r\n\r\n## License\r\nCopyright &copy; 2013-14 [David J. Bradshaw](https://github.com/davidjbradshaw).\r\nLicensed under the [MIT license](http://opensource.org/licenses/MIT).\r\n[![Code Climate](https://codeclimate.com/github/davidjbradshaw/iframe-resizer.png)](https://codeclimate.com/github/davidjbradshaw/iframe-resizer) [![Build Status](https://travis-ci.org/davidjbradshaw/iframe-resizer.png?branch=master)](https://travis-ci.org/davidjbradshaw/iframe-resizer)","google":"UA-47552253-1","note":"Don't delete this file! It's used internally to help with page regeneration."}