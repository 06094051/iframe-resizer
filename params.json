{"name":"Iframe-resizer","tagline":"Size cross domain iFrames to content with support for window/content resizing, and multiple iFrames.","body":"# iFrame Resizer\r\n\r\nThis library enables the automatic resizing of the height and width of both same and cross domain iFrames to fit the contained content. It uses [postMessage](https://developer.mozilla.org/en-US/docs/Web/API/window.postMessage) to pass messages between the host page and the iFrame and when available [MutationObserver](https://developer.mozilla.org/en/docs/Web/API/MutationObserver) to detect DOM changes, with a fallback to setInterval for IE8-10. \r\n\r\nThe code also detects browser events that can cause the content to resize; provides functions to allow the iFrame to set a custom size and close itself. Plus it supports having multiple iFrames on the host-page and additionally provides for the sending of simple messages from the iFrame to the parent page. \r\n\r\nFor security, by default the host-page automatically checks that the origin of incoming messages are from the domain of the page listed in the `src` property of the iFrame.\r\n\r\nThe package contains two minified JavaScript files in the [js](js) folder. The first ([iframeResizer.min.js](https://raw.githubusercontent.com/davidjbradshaw/iframe-resizer/master/js/iframeResizer.min.js)) is for the page hosting the iFrames. It can be called with **native** JavaScript;\r\n\r\n```js\r\niFrameResize( [{options}], [css selector] || [iframe] );\r\n```\r\n\r\nor via **jQuery**. (See [notes](#browser-compatibility) below for using native version with IE8).\r\n\r\n```js\r\n$('iframe').iFrameResize( [{options}] );\r\n```\r\n\r\nThe second file ([iframeResizer.contentWindow.min.js](https://raw.github.com/davidjbradshaw/iframe-resizer/master/js/iframeResizer.contentWindow.min.js)) is a **native** JavaScript file that needs placing in the page contained within your iFrame. <i>This file is designed to be a guest on someone else's system, so has no dependancies and won't do anything until it's activated by a message from the containing page</i>.\r\n\r\n### Typical setup\r\n\r\nThe normal configuration is to have the iFrame resize when the browser window changes size or the content of the iFrame changes. To set this up you need to configure one of the dimensions of the iFrame to a percentage and tell the library only to update the other dimension. Normally you would set the width to 100% and have the height scale to fit the content.\r\n\r\n```html\r\n<iframe src=\"http://anotherdomain.com/frame.content.html\" width=\"100%\" scrolling=\"no\"></iframe>\r\n```\r\n\r\nNote that scrolling is set to 'no', as older versions of IE don't allow this to be turned off in code and can just slightly add a bit of extra space to the bottom of the content that it doesn't report when it returns the height. If you have problems, check the [troubleshooting](#troubleshooting) section below.\r\n\r\n###Example\r\nTo see this working take a look at this [example](http://davidjbradshaw.com/iframe-resizer/example/) and watch the [console](https://developer.mozilla.org/en-US/docs/Tools/Web_Console).\r\n\r\n## Options\r\n\r\n### log\r\n\r\n\tdefault: false\r\n\ttype:    boolean\r\n\r\nSetting the `log` option to true will make the scripts in both the host page and the iFrame output everything they do to the JavaScript console so you can see the communication between the two scripts.\r\n\r\n### autoResize\r\n\r\n\tdefault: true\r\n\ttype:    boolean\r\n\r\nWhen enabled changes to the Window size or the DOM will cause the iFrame to resize to the new content size. Disable if using size method with custom dimensions.\r\n\r\n### bodyBackground\r\n\r\n\tdefault: null\r\n\ttype:    string \r\n\r\nOverride the body background style in the iFrame. \r\n\r\n### bodyMargin\r\n\r\n\tdefault: null\r\n\ttype:    string || number\r\n\r\nOverride the default body margin style in the iFrame. A string can be any valid value for the CSS margin attribute, for example '8px 3em'. A number value is converted into px.\r\n\r\n### checkOrigin\r\n\r\n\tdefault: true\r\n\ttype:    boolean\r\n\r\nWhen set to true, only allow incoming messages from the domain listed in the `src` property of the iFrame tag. If your iFrame navigates between different domains, ports or protocols; then you will need to disable this option.\r\n \r\n### enablePublicMethods  \r\n\r\n\tdefault: false\r\n\ttype:    boolean\r\n\r\nIf enabled, a `window.parentIFrame` object is created in the iFrame that contains methods outlined [below](#iframe-methods).\r\n\r\n### interval\r\n\r\n\tdefault: 32  (in ms)\r\n\ttype:    number\r\n\r\nIn browsers that don't support [mutationObserver](https://developer.mozilla.org/en/docs/Web/API/MutationObserver), such as IE10, the library falls back to using setInterval, to check for changes to the page size. The default value is equal to two frame refreshes at 60Hz, setting this to a higher value will make screen redraws noticeable to the user.\r\n\r\nSetting this property to a negative number will force the interval check to run instead of [mutationObserver](https://developer.mozilla.org/en/docs/Web/API/MutationObserver).\r\n\r\nSet to zero to disable.\r\n\r\n### heightCalculationMethod\r\n\r\n\tdefault: 'bodyOffset'\r\n\tvalues:  'bodyOffset' | 'bodyScroll' | 'documentElementOffset' | 'documentElementScroll' | \r\n\t         'max' | 'min' | 'grow' | 'lowestElement'\r\n\r\nBy default the height of the iFrame is calculated by converting the margin of the `body` to <i>px</i> and then adding the top and bottom figures to the offsetHeight of the `body` tag. \r\n\r\nIn cases where CSS styles causes the content to flow outside the `body` you may need to change this setting to one of the following options. Each can give different values depending on how CSS is used in the page and each has varying side-effects. You will need to experiment to see which is best for any particular circumstance.\r\n\r\n* **bodyScroll** uses `document.body.scrollHeight`\r\n* **documentElementOffset** uses `document.documentElement.offsetHeight`\r\n* **documentElementScroll** uses `document.documentElement.scrollHeight`\r\n* **max** takes the largest value of the main four options\r\n* **min** takes the smallest value of the main four options\r\n* **grow** same as **max** but disables the double resize that is used to workout if the iFrame needs to shrink. This provides much better performance if your iFrame will only ever increase in size\r\n* **lowestElement** Loops though every element in the the DOM and finds the lowest bottom point.  \r\n\r\n<i>Notes:</i>\r\n\r\n<i>The **bodyScroll**, **documentElementScroll**, **max** and **min** options can cause screen flicker and will prevent the [interval](#interval) trigger downsizing the iFrame when the content shrinks. This is mainly an issue in IE 10 and below, where the [mutationObserver](https://developer.mozilla.org/en/docs/Web/API/MutationObserver) event is not supported. To overcome this you need to manually trigger a page resize by calling the [parentIFrame.size()](#size-customheight-customwidth) method when you remove content from the page.</i>\r\n\r\n<i>The **lowestElement** option is the most reliable way of determining the page height. However, it does have a performance impact in older versions of IE. In one screen refresh (16ms) Chrome 34 can calculate the position of around 10,000 html nodes, whereas IE 8 can calculate approximately 50. It is recommend to fallback to **max** or **grow** in IE10 and below.</i>\r\n\r\n### maxHeight / maxWidth\r\n\r\n    default: infinity\r\n    type:    integer\r\n\r\nSet maximum height/width of iFrame.\r\n\r\n### minHeight / minWidth\r\n\r\n    default: 0\r\n    type:    integer\r\n\r\nSet minimum height/width of iFrame.\r\n\r\n### scrolling\r\n\r\n    default: false\r\n    type:    boolean\r\n\r\nEnable scroll bars in iFrame.\r\n\r\n### sizeHeight\r\n\r\n\tdefault: true\r\n\ttype:    boolean\r\n\r\nResize iFrame to content height.\r\n\r\n### sizeWidth\r\n\r\n\tdefault: false\r\n\ttype:    boolean\r\n\r\nResize iFrame to content width.\r\n\r\n\r\n### tolerance\r\n\r\n\tdefault: 0\r\n\ttype:    integer\r\n\t\r\nSet the number of pixels the iFrame content size has to change by, before triggering resize of the iFrame.\r\n\r\n\r\n## Callback Methods\r\n\r\n### closedCallback\r\n\r\n\ttype: function (iframeID)\r\n\r\nCalled when iFrame is closed via `parentIFrame.close()` method.\r\n\r\n### initCallback\r\n\r\n\ttype: function (iframe)\r\n\r\nInitial setup callback function.\r\n\r\n### messageCallback\r\n\r\n\ttype: function ({iframe,message})\r\n\r\nReceive message posted from iFrame with the `parentIFrame.sendMessage()` method.\r\n\r\n### resizedCallback\r\n\r\n\ttype: function ({iframe,height,width,type})\r\n\t\r\nFunction called after iFrame resized. Passes in messageData object containing the **iFrame**, **height**, **width** and the **type** of event that triggered the iFrame to resize.\r\n\r\n### scrollCallback\r\n\r\n\ttype: function ({x,y})\r\n\r\nCalled before the page is repositioned after a request from the iFrame, due to ethier an in page link, or a direct request from either [parentIFrame.scrollTo()](#scrolltoxy) or [parentIFrame.scrollToOffset()](#scrolltooffsetxy). If this callback function returns false, it will stop the library from repositioning the page, so that you can implement your own animatied page scrolling instead.\r\n\r\n\r\n## IFrame Methods\r\n\r\nTo enable these methods you must set [enablePublicMethods](#enablepublicmethods) to **true**. This creates the `window.parentIFrame` object in the iFrame. These method should be contained by a test for the `window.parentIFrame` object, in case the page is not loaded inside an iFrame. For example:\r\n\r\n```js\r\nif ('parentIFrame' in window) {\r\n\tparentIFrame.close();\r\n}\r\n```\r\n\r\n### close()\r\n\r\nRemove the iFrame from the parent page. \r\n\r\n### getId()\r\n\r\nReturns the ID of the iFrame that the page is contained in.\r\n\r\n### scrollTo(x,y)\r\n\r\nScroll the parent page to the coordinates x and y.\r\n\r\n### scrollToOffset(x,y)\r\n\r\nScroll the parent page to the coordinates x and y relative to the position of the iFrame.\r\n\r\n### sendMessage(message,[targetOrigin])\r\n\r\nSend data to the containing page, `message` can be any data type that can be serialized into JSON. The `targetOrigin` option is used to restrict where the message is sent to; to stop an attacker mimicking your parent page. See the MDN documentation on [postMessage](https://developer.mozilla.org/en-US/docs/Web/API/Window.postMessage) for more details.\r\n\r\n### setHeightCalculationMethod(heightCalculationMethod)\r\n\r\nChange the method use to workout the height of the iFrame. \r\n\r\n### size ([customHeight],[ customWidth])\r\n\r\nManually force iFrame to resize. This method optionally accepts two arguments: **customHeight** & **customWidth**. To use them you need first to disable the `autoResize` option to prevent auto resizing and enable the `sizeWidth` option if you wish to set the width. \r\n\r\n```js\r\niFrameResize({\r\n\tautoResize: false,\r\n\tenablePublicMethods: true,\r\n\tsizeWidth: true\r\n});\r\n```\r\n\r\nThen you can call the `size` method with dimensions:\r\n\r\n```js\r\nif ('parentIFrame' in window) {\r\n\tparentIFrame.size(100); // Set height to 100px\r\n}\r\n```\r\n\r\n\r\n##Troubleshooting\r\n\r\nThe first step to investigate a problem is to enable the [log](#log) option and then open the [JavaScript Console](https://developers.google.com/chrome-developer-tools/docs/console#opening_the_console). This will enable you to see what both the iFrame and host page are up to and also see any JavaScript error messages. \r\n\r\nSolutions for the most common problems are outlined in this section.\r\n\r\n### IFrame not sizing correctly\r\nIf a larger element of content is removed from the normal document flow, through the use of absolute positioning, it can prevent the browser working out the correct size of the page. In such cases you can change the [heightCalculationMethod](#heightcalculationmethod) to uses one of the other sizing methods, normally you will be best off selecting the **max** or **lowestElement** options to avoid cross browser differences. \r\n\r\n### IFrame not downsizing\r\nThe most likely cause of this problem is having set the height of an element to be 100% of the page somewhere in your CSS. This is normally on the `html` or `body` elements, but it could be on any element in the page.\r\n\r\nNot having a valid [HTML document type](http://en.wikipedia.org/wiki/Document_type_declaration) in the iFrame can also sometimes prevent downsizing. At it's most simplest this can be the following.\r\n\r\n```html\r\n<!DOCTYPE html>\r\n```\r\n\r\n###IFrame not resizing\r\nThe most common cause of this is not placing the [iframeResizer.contentWindow.min.js](https://raw.github.com/davidjbradshaw/iframe-resizer/master/js/iframeResizer.contentWindow.min.js) script inside the iFramed page. If the other page is on a domain outside your control and you can not add JavaScript to that page, then now is the time to give up all hope of ever getting the iFrame to size to the content. As it is impossible to work out the size of the contained page, without using JavaScript on both the parent and child pages.\r\n\r\n###IFrame not detecting CSS :hover events\r\nIf your page resizes via CSS `:hover` events, these won't be detect by default. It is however possible to create `mouseover` and `mouseout` event listeners on the elements that are resized via CSS and have these events call the [parentIFrame.size()](##parentiframesize-customheight-customwidth) method. With jQuery this can be done as follows, once you have set the [enablePublicMethods](#enablepublicmethods) option to **true**.\r\n\r\n```js\r\nfunction resize(){\r\n\tif ('parentIFrame' in window) {\r\n\t\tsetTimeout(function(){ // Fix FireFox timing issue\r\n\t\t\tparentIFrame.size();\r\n\t\t},0);\r\n\t}\r\n}\r\n\r\n$(*Element with hover style*).hover(resize);\r\n```\r\n\r\n### ParentIframe not found errors\r\nTo call methods in the iFrame, you need to set the [enablePublicMethods](#enablepublicmethods) option to true.\r\n\r\n### PDF and OpenDocument files\r\nIt is not possible to add the required JavaScript to PDF and ODF files. However, you can get around this limitation by using [ViewerJS](http://viewerjs.org/) to render these files inside a HTML page, that also contains the iFrame JavaScript file ([iframeResizer.contentWindow.min.js](https://raw.github.com/davidjbradshaw/iframe-resizer/master/js/iframeResizer.contentWindow.min.js)).\r\n\r\n### Unexpected message received error\r\nBy default the origin of incoming messages is checked against the `src` attribute of the iFrame. If they don't match an error is thrown. This behaviour can be disabled by setting the [checkOrigin](#checkorigin) option to **false**.\r\n\r\n\r\n## Browser compatibility \r\n###jQuery version\r\n\r\nWorks with all browsers which support [window.postMessage](http://caniuse.com/#feat=x-doc-messaging) (IE8+).\r\n\r\n###Native version\r\n\r\nAdditionally requires support for [Array.prototype.forEach](http://kangax.github.io/es5-compat-table/#Array.prototype.forEach) (IE9+) and [document.querySelectorAll](https://developer.mozilla.org/en-US/docs/Web/API/Document.querySelectorAll) (IE8 Standards Mode). For **IE8** force [Standards Mode](http://en.wikipedia.org/wiki/Internet_Explorer_8#Standards_mode),\r\n\r\n```html\r\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n```\r\n\r\nand use the [MDN PolyFill](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach) on the host page.\r\n\r\n```js\r\nif (!Array.prototype.forEach){\r\n\tArray.prototype.forEach = function(fun /*, thisArg */){\r\n\t\t\"use strict\";\r\n\t\tif (this === void 0 || this === null || typeof fun !== \"function\") throw new TypeError();\r\n\r\n\t\tvar\r\n\t\t\tt = Object(this),\r\n\t\t\tlen = t.length >>> 0,\r\n\t\t\tthisArg = arguments.length >= 2 ? arguments[1] : void 0;\r\n\r\n\t\tfor (var i = 0; i < len; i++)\r\n\t\t\tif (i in t)\r\n\t\t\t\tfun.call(thisArg, t[i], i, t);\r\n\t};\r\n}\r\n```\r\n\r\n\r\n## Contributing\r\nIn lieu of a formal style-guide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\r\n\r\n\r\n##Version History\r\n\r\n* v2.8.1 [#138](https://github.com/davidjbradshaw/iframe-resizer/issues/138) Add option to pass in iFrame object, instead of selector.\r\n* v2.8.0 [#68](https://github.com/davidjbradshaw/iframe-resizer/issues/68) Added support for in page links and *scrollCallback()* function. [#140](https://github.com/davidjbradshaw/iframe-resizer/issues/140) Added listener for *transitionend* event [[Mat Brown](https://github.com/outoftime)]. Added listeners for animation events. Added listener for *deviceorientation* event. Improved logging for nested iFrames.\r\n* v2.7.1 [#131](https://github.com/davidjbradshaw/iframe-resizer/issues/131) Fix code that works out position of iFrame on host page.\r\n* v2.7.0 [#129](https://github.com/davidjbradshaw/iframe-resizer/issues/129) Parse data passed to *parentIFrame.sendMessage()* into JSON to allow complex data types to be sent to *messageCallback()*.\r\n* v2.6.5 [#107](https://github.com/davidjbradshaw/iframe-resizer/issues/107) Added Node support for use with Browserify.\r\n* v2.6.4 [#115](https://github.com/davidjbradshaw/iframe-resizer/issues/115) Added *parentIFrame.scrollToOffset()* method. \r\n* v2.6.3 [#115](https://github.com/davidjbradshaw/iframe-resizer/issues/115) Fixed issue with the range check sometimes causing non-resizing messages to be rejected.\r\n* v2.6.2 [#104](https://github.com/davidjbradshaw/iframe-resizer/issues/104) Fixed issue with jQuery.noConflict [[Dmitry Mukhutdinov](https://github.com/flyingleafe)].\r\n* v2.6.1 [#91](https://github.com/davidjbradshaw/iframe-resizer/issues/91) Fixed issue with jQuery version requiring empty object if no options are being set.\r\n* v2.6.0 Added *parentIFrame.scrollTo()* method. Added *Tolerance* option. [#85](https://github.com/davidjbradshaw/iframe-resizer/issues/85) Update troubleshooting guide [[Kevin Sproles](https://github.com/kevinsproles)].\r\n* v2.5.2 [#67](https://github.com/davidjbradshaw/iframe-resizer/issues/67) Allow lowercase `<iframe>` tags for XHTML complience [[SlimerDude](https://github.com/SlimerDude)]. [#69](https://github.com/davidjbradshaw/iframe-resizer/issues/69) Fix watch task typo in gruntfile.js [[Matthew Hupman](https://github.com/mhupman)]. Remove trailing comma in heightCalcMethods array [#76](https://github.com/davidjbradshaw/iframe-resizer/issues/76) [[Fabio Scala](https://github.com/fabioscala)].\r\n* v2.5.1 [#58](https://github.com/davidjbradshaw/iframe-resizer/issues/58) Fixed endless loop and margin issues with an unnested mid-tier iframe. [#59](https://github.com/davidjbradshaw/iframe-resizer/issues/59) Fixed main property of [Bower](http://bower.io/) config file.\r\n* v2.5.0 Added *minHeight*, *maxHeight*, *minWidth* and *maxWidth* options. Added *initCallback* and *closedCallback* functions (Close event calling *resizedCallback* is deprecated). Added **grow** and **lowestElement** *heightCalculationMethods*. Added AMD support. [#52](https://github.com/davidjbradshaw/iframe-resizer/issues/52) Added *sendMessage* example. [#54](https://github.com/davidjbradshaw/iframe-resizer/issues/54) Work around IE8's borked JS execution stack. [#55](https://github.com/davidjbradshaw/iframe-resizer/issues/55) Check datatype of passed in options.\r\n* v2.4.8 Fix issue when message passed to messageCallback contains a colon.\r\n* v2.4.7 [#49](https://github.com/davidjbradshaw/iframe-resizer/issues/49) Deconflict requestAnimationFrame.\r\n* v2.4.6 [#46](https://github.com/davidjbradshaw/iframe-resizer/issues/46) Fix iFrame event listener in IE8.\r\n* v2.4.5 [#41](https://github.com/davidjbradshaw/iframe-resizer/issues/41) Prevent error in FireFox when body is hidden by CSS [[Scott Otis](/Scotis)]. \r\n* v2.4.4 Enable nested iFrames ([#31](https://github.com/davidjbradshaw/iframe-resizer/issues/31) Filter incoming iFrame message in host-page script. [#33](https://github.com/davidjbradshaw/iframe-resizer/issues/33) Squash unexpected message warning when using nested iFrames. Improved logging for nested iFrames). [#38](https://github.com/davidjbradshaw/iframe-resizer/issues/38) Detect late image loads that cause a resize due to async image loading in WebKit [[Yassin](/ynh)]. Fixed :Hover example in FireFox. Increased trigger timeout lock to 64ms. \r\n* v2.4.3 Simplified handling of double fired events. Fixed test coverage.\r\n* v2.4.2 Fix missing 'px' unit when resetting height.\r\n* v2.4.1 Fix screen flicker issue with scroll height calculation methods in v2.4.0.\r\n* v2.4.0 Improved handling of alternate sizing methods, so that they will now shrink on all trigger events, except *Interval*. Prevent error when incoming message to iFrame is an object.\r\n* v2.3.2 Fix backwards compatibility issue between V2 iFrame and V1 host-page scripts.\r\n* v2.3.1 Added setHeightCalculationMethod() method in iFrame. Added *min* option to the height calculation methods. Invalid value for *heightCalculationMethod* is now a warning rather than an error and now falls back to the default value.\r\n* v2.3.0 Added extra *heightCalculationMethod* options. Inject clearFix into 'body' to work around CSS floats preventing the height being correctly calculated. Added meaningful error message for non-valid values in *heightCalculationMethod*. Stop **click** events firing for 50ms after **size** events. Fixed hover example in old IE.\r\n* v2.2.3 [#26](https://github.com/davidjbradshaw/iframe-resizer/issues/26) Locally scope jQuery to $, so there is no dependancy on it being defined globally.\r\n* v2.2.2 [#25](https://github.com/davidjbradshaw/iframe-resizer/issues/25) Added click listener to Window, to detect CSS checkbox resize events.\r\n* v2.2.1 [#24](https://github.com/davidjbradshaw/iframe-resizer/issues/24) Prevent error when incoming message to host page is an object [[Torjus Eidet](https://github.com/torjue)].\r\n* v2.2.0 Added targetOrigin option to sendMessage function. Added bodyBackground option. Expanded troubleshooting section.\r\n* v2.1.1 [#16](https://github.com/davidjbradshaw/iframe-resizer/issues/16) Option to change the height calculation method in the iFrame from offsetHeight to scrollHeight. Troubleshooting section added to docs.\r\n* v2.1.0 Added sendMessage() and getId() to window.parentIFrame. Changed width calculation to use scrollWidth. Removed deprecated object name in iFrame.\r\n* v2.0.0 Added native JS public function, renamed script filename to reflect that jQuery is now optional. Renamed *do(Heigh/Width)* to *size(Height/Width)*, renamed *contentWindowBodyMargin* to *bodyMargin* and renamed *callback* *resizedCallback*. Improved logging messages. Stop *resize* event firing for 50ms after *interval* event. Added multiple page example. Workout unsized margins inside the iFrame. The *bodyMargin* property now accepts any valid value for a CSS margin. Check message origin is iFrame. Removed deprecated methods.\r\n* v1.4.4 Fixed *bodyMargin* bug.\r\n* v1.4.3 CodeCoverage fixes. Documentation improvements.\r\n* v1.4.2 Fixed size(250) example in IE8.\r\n* v1.4.1 Setting `interval` to a negative number now forces the interval test to run instead of [MutationObserver](https://developer.mozilla.org/en/docs/Web/API/MutationObserver).\r\n* v1.4.0 [#12](https://github.com/davidjbradshaw/iframe-resizer/issues/12) Option to enable scrolling in iFrame, off by default. [#13](https://github.com/davidjbradshaw/iframe-resizer/issues/13) Bower dependancies updated.\r\n* v1.3.7 Stop *resize* event firing for 50ms after *size* event. Added size(250) to example.\r\n* v1.3.6 [#11](https://github.com/davidjbradshaw/iframe-resizer/issues/11) Updated jQuery to v1.11.0 in example due to IE11 having issues with jQuery v1.10.1.\r\n* v1.3.5 Documentation improvements. Added Grunt-Bump to build script.\r\n* v1.3.0 IFrame code now uses default values if called with an old version of the host page script. Improved function naming. Old names have been deprecated and removed from docs.\r\n* v1.2.5 Fix publish to [plugins.jquery.com](https://plugins.jquery.com).\r\n* v1.2.0 Added autoResize option, added height/width values to iFrame public size function, set HTML tag height to auto, improved documentation [All [Jure Mav](https://github.com/jmav)]. Plus setInterval now only runs in browsers that don't support [MutationObserver](https://developer.mozilla.org/en/docs/Web/API/MutationObserver) and is on by default, sourceMaps added and close() method introduced to parentIFrame object in iFrame. \r\n* v1.1.1 Added event type to messageData object.\r\n* v1.1.0 Added DOM [MutationObserver](https://developer.mozilla.org/en/docs/Web/API/MutationObserver) trigger to better detect content changes in iFrame, [#7](https://github.com/davidjbradshaw/iframe-resizer/issues/7) Set height of iFrame body element to auto to prevent resizing loop, if it's set to a percentage.\r\n* v1.0.3 [#6](https://github.com/davidjbradshaw/iframe-resizer/issues/6) Force incoming messages to string. Migrated to Grunt 4.x. Published to Bower.\r\n* v1.0.2 [#2](https://github.com/davidjbradshaw/iframe-resizer/issues/2) mime-type changed for IE8-10.\r\n* v1.0.0 Initial published release.\r\n\r\n\r\n## License\r\nCopyright &copy; 2013-14 [David J. Bradshaw](https://github.com/davidjbradshaw).\r\nLicensed under the [MIT license](http://opensource.org/licenses/MIT).\r\n","google":"UA-47552253-1","note":"Don't delete this file! It's used internally to help with page regeneration."}